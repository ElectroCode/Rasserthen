msgid ""
msgstr ""
"Project-Id-Version: Limnoria\n"
"POT-Creation-Date: 2011-02-26 09:49+CET\n"
"PO-Revision-Date: 2011-07-19 22:51+0200\n"
"Last-Translator: skizzhg <skizzhg@gmx.com>\n"
"Language-Team: Italian <skizzhg@gmx.com>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"


#: config.py:38
msgid ""
"Determines whether or not to\n"
"    replace letters in the output of spellit."
msgstr "Determina se sostituire o meno le lettere nell'output di spellit."

#: config.py:41
msgid ""
"Determines whether or not\n"
"    to replace punctuation in the output of spellit."
msgstr "Determina se sostituire o meno la punteggiatura nell'output di spellit."

#: config.py:44
msgid ""
"Determines whether or not to\n"
"    replace numbers in the output of spellit."
msgstr "Determina se sostituire o meno i numeri nell'output di spellit."

#: config.py:48
msgid ""
"Determines the minimum number of a letters\n"
"    in a word before it will be shrunken by the shrink command/filter."
msgstr ""
"Determina il numero minimo di lettere in una parola prima di essere\n"
"    abbreviata dal comando shrink."

#: plugin.py:50
#, docstring
msgid ""
"This plugin offers several commands which transform text in some way.\n"
"    It also provides the capability of using such commands to 'filter' the\n"
"    output of the bot -- for instance, you could make everything the bot says\n"
"    be in leetspeak, or Morse code, or any number of other kinds of filters.\n"
"    Not very useful, but definitely quite fun :)"
msgstr ""
"Questo plugin offre svariati comandi che trasformano il testo in vari modi.\n"
"    Fornisce anche la possibilità di utilizzare questi comandi per \"filtrare\"\n"
"    l'output del bot; è possibile, ad esempio, far sì che qualsiasi cosa dica\n"
"    sia in l33t5p34k, codice Morse o altri tipi di trasformazione.\n"
"    Non molto utile ma decisamente divertente :)"

#: plugin.py:84
#, docstring
msgid ""
"[<channel>] [<command>]\n"
"\n"
"        Sets the outFilter of this plugin to be <command>.  If no command is\n"
"        given, unsets the outFilter.  <channel> is only necessary if the\n"
"        message isn't sent in the channel itself.\n"
"        "
msgstr ""
"[<canale>] [<comando>]\n"
"\n"
"        Imposta il filtro di uscita di questo plugin per essere <comando>.\n"
"        Se non viene specificato alcun comando il filtro sarà disattivato.\n"
"        <canale> è necessario solo se il messaggio non viene inviato nel canale stesso.\n"
"        "

#: plugin.py:97
msgid "That's not a valid filter command."
msgstr "Questo non è un filtro valido."

#: plugin.py:107
#, docstring
msgid ""
"<text>\n"
"\n"
"        Removes all the vowels from <text>.  (If you're curious why this is\n"
"        named 'hebrew' it's because I (jemfinch) thought of it in Hebrew class,\n"
"        and printed Hebrew often elides the vowels.)\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Rimuove tutte le vocali da <testo> (se siete curiosi di sapere come mai si\n"
"        chiama \"hebrew\" è perché io (jemfinch) l'ho pensata in ebraico, le stampe\n"
"        ebraiche sono spesso prive di vocali).\n"
"        "

#: plugin.py:119
#, docstring
msgid ""
"<text>\n"
"\n"
"        Removes all the spaces from <text>.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Rimuove tutti gli spazi da <testo>.\n"
"        "

#: plugin.py:129
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text>, with all consecutive duplicated letters removed.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce <testo> rimuovendo tutte le lettere doppie consecutive.\n"
"        "

#: plugin.py:142
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns the binary representation of <text>.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce la rappresentazione binaria di <testo>.\n"
"        "

#: plugin.py:168
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns the character representation of binary <text>.\n"
"        Assumes ASCII, 8 digits per character.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce la rappresentazione in caratteri di <testo>\n"
"        binario. Presuppone sia ASCII, 8 cifre per carattere.\n"
"        "

#: plugin.py:179
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns a hexstring from the given string; a hexstring is a string\n"
"        composed of the hexadecimal value of each character in the string\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce una stringa esadecimale dalla stringa data; una stringa\n"
"        esadecimale è una stringa composta dal valore esadecimale di ogni carattere.\n"
"        "

#: plugin.py:189
#, docstring
msgid ""
"<hexstring>\n"
"\n"
"        Returns the string corresponding to <hexstring>.  Obviously,\n"
"        <hexstring> must be a string of hexadecimal digits.\n"
"        "
msgstr ""
"<stringa esadecimale>\n"
"\n"
"        Restituisce la stringa corrispondente a <stringa esadecimale>,\n"
"        quest'ultima deve ovviamente contenere caratteri esadecimali.\n"
"        "

#: plugin.py:197
msgid "Invalid input."
msgstr "Input non valido."

#: plugin.py:202
#, docstring
msgid ""
"<text>\n"
"\n"
"        Rotates <text> 13 characters to the right in the alphabet.  Rot13 is\n"
"        commonly used for text that simply needs to be hidden from inadvertent\n"
"        reading by roaming eyes, since it's easily reversible.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Sposta ogni carattere di <testo> 13 posizioni a destra nell'alfabeto.\n"
"        Giacché Rot13 è facilmente reversibile, è comunemente usato per offuscare\n"
"        del testo da letture involontarie.\n"
"        "

#: plugin.py:213
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns the lisping version of <text>\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce la versione blesa di <testo>\n"
"        "

#: plugin.py:244
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns the l33tspeak version of <text>\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce la versione l33t di <testo>\n"
"        "

#: plugin.py:264
#, docstring
msgid ""
"<text>\n"
"\n"
"        Replies with an especially k-rad translation of <text>.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Risponde con una particolare traduzione k-rad di <testo>.\n"
"        "

#: plugin.py:280
#, docstring
msgid ""
"<text>\n"
"\n"
"        Replies with a string where each word is scrambled; i.e., each internal\n"
"        letter (that is, all letters but the first and last) are shuffled.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Risponde con una stringa dove ogni parola è mescolata; ovvero ogni lettera\n"
"        interna (tutte le lettere tranne la prima e l'ultima) è mischiata con le altre.\n"
"        "

#: plugin.py:345
#, docstring
msgid ""
"<Morse code text>\n"
"\n"
"        Does the reverse of the morse command.\n"
"        "
msgstr ""
"<testo Morse>\n"
"\n"
"        Fa il contrario del comando morse.\n"
"        "

#: plugin.py:362
#, docstring
msgid ""
"<text>\n"
"\n"
"        Gives the Morse code equivalent of a given string.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Mostra il codice Morse equivalente alla stringa fornita.\n"
"        "

#: plugin.py:374
#, docstring
msgid ""
"<text>\n"
"\n"
"        Reverses <text>.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Riporta <testo> in maniera speculare.\n"
"        "

#: plugin.py:391
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> with each character randomly colorized.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce <testo> con ogni carattere colorato in modo casuale.\n"
"        "

#: plugin.py:401
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> colorized like a rainbow.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce <testo> colorato come un arcobaleno.\n"
"        "

#: plugin.py:412
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> stripped of all color codes.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce <testo> privato di tutti i codici colore.\n"
"        "

#: plugin.py:421
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> as if an AOLuser had said it.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce <testo> come pronunciato da un utente AOL.\n"
"        "

#: plugin.py:448
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> as if JeffK had said it himself.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce <testo> come pronunciato da JeffK.\n"
"        "

#: plugin.py:544
msgid "ay"
msgstr "a"

#: plugin.py:544
msgid "bee"
msgstr "bi"

#: plugin.py:544
msgid "dee"
msgstr "di"

#: plugin.py:544
msgid "see"
msgstr "ci"

#: plugin.py:545
msgid "aych"
msgstr "acca"

#: plugin.py:545
msgid "ee"
msgstr "e"

#: plugin.py:545
msgid "eff"
msgstr "effe"

#: plugin.py:545
msgid "gee"
msgstr "gi"

#: plugin.py:546
msgid "ell"
msgstr "elle"

#: plugin.py:546
msgid "eye"
msgstr "i"

#: plugin.py:546
msgid "jay"
msgstr "gei"

#: plugin.py:546
msgid "kay"
msgstr "cappa"

#: plugin.py:547
msgid "cue"
msgstr "cu"

#: plugin.py:547
msgid "em"
msgstr "emme"

#: plugin.py:547
msgid "en"
msgstr "enne"

#: plugin.py:547
msgid "oh"
msgstr "o"

#: plugin.py:547
msgid "pee"
msgstr "pi"

#: plugin.py:548
msgid "arr"
msgstr "erre"

#: plugin.py:548
msgid "ess"
msgstr "esse"

#: plugin.py:548
msgid "tee"
msgstr "ti"

#: plugin.py:548
msgid "you"
msgstr "u"

#: plugin.py:549
msgid "double-you"
msgstr "doppia vu"

#: plugin.py:549
msgid "ecks"
msgstr "ics"

#: plugin.py:549
msgid "vee"
msgstr "vi"

#: plugin.py:549
msgid "why"
msgstr "ipsilon"

#: plugin.py:550
msgid "zee"
msgstr "zeta"

#: plugin.py:555
msgid "exclamation point"
msgstr "punto esclamativo"

#: plugin.py:556
msgid "quote"
msgstr "apice doppio"

#: plugin.py:557
msgid "pound"
msgstr "cancelletto"

#: plugin.py:558
msgid "dollar sign"
msgstr "dollaro"

#: plugin.py:559
msgid "percent"
msgstr "percentuale"

#: plugin.py:560
msgid "ampersand"
msgstr "e commerciale"

#: plugin.py:561
msgid "single quote"
msgstr "apice singolo"

#: plugin.py:562
msgid "left paren"
msgstr "parentesi tonda sinistra"

#: plugin.py:563
msgid "right paren"
msgstr "parentesi tonda destra"

#: plugin.py:564
msgid "asterisk"
msgstr "asterisco"

#: plugin.py:565
msgid "plus"
msgstr "più"

#: plugin.py:566
msgid "comma"
msgstr "virgola"

#: plugin.py:567
msgid "minus"
msgstr "meno"

#: plugin.py:568
msgid "period"
msgstr "punto"

#: plugin.py:569
msgid "slash"
msgstr "slash"

#: plugin.py:570
msgid "colon"
msgstr "due punti"

#: plugin.py:571
msgid "semicolon"
msgstr "punto e virgola"

#: plugin.py:572
msgid "less than"
msgstr "minore"

#: plugin.py:573
msgid "equals"
msgstr "uguale"

#: plugin.py:574
msgid "greater than"
msgstr "maggiore"

#: plugin.py:575
msgid "question mark"
msgstr "punto interrogativo"

#: plugin.py:576
msgid "at"
msgstr "chiocciola"

#: plugin.py:577
msgid "left bracket"
msgstr "parentesi quadra sinistra"

#: plugin.py:578
msgid "backslash"
msgstr "backslash"

#: plugin.py:579
msgid "right bracket"
msgstr "parentesi quadra destra"

#: plugin.py:580
msgid "caret"
msgstr "circonflesso"

#: plugin.py:581
msgid "underscore"
msgstr "trattino basso"

#: plugin.py:582
msgid "backtick"
msgstr "accento grave"

#: plugin.py:583
msgid "left brace"
msgstr "parentesi graffa sinistra"

#: plugin.py:584
msgid "pipe"
msgstr "pipe"

#: plugin.py:585
msgid "right brace"
msgstr "parentesi graffa destra"

#: plugin.py:586
msgid "tilde"
msgstr "tilde"

#: plugin.py:589
msgid "one"
msgstr "uno"

#: plugin.py:589
msgid "three"
msgstr "tre"

#: plugin.py:589
msgid "two"
msgstr "due"

#: plugin.py:589
msgid "zero"
msgstr "zero"

#: plugin.py:590
msgid "five"
msgstr "cinque"

#: plugin.py:590
msgid "four"
msgstr "quattro"

#: plugin.py:590
msgid "seven"
msgstr "sette"

#: plugin.py:590
msgid "six"
msgstr "sei"

#: plugin.py:591
msgid "eight"
msgstr "otto"

#: plugin.py:591
msgid "nine"
msgstr "nove"

#: plugin.py:595
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text>, phonetically spelled out.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce <testo> con trascrizione fonetica (spelling).\n"
"        "

#: plugin.py:625
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> as GNU/RMS would say it.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce <testo> come pronunciato da GNU/RMS.\n"
"        "

#: plugin.py:634
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> with each word longer than\n"
"        supybot.plugins.Filter.shrink.minimum being shrunken (i.e., like\n"
"        \"internationalization\" becomes \"i18n\").\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce <testo> con ogni parola più lunga di\n"
"        supybot.plugins.Filter.shrink.minimum abbreviata\n"
"        (ad esempio \"internationalization\" diventa \"i18n\").\n"
"        "

#: plugin.py:653
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> with the l's made into r's and r's made into l's.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce <testo> con le elle trasformate in erre e viceversa.\n"
"        "

#: plugin.py:702
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> rotated 180 degrees. Only really works for ASCII\n"
"        printable characters.\n"
"        "
msgstr ""
"<testo>\n"
"\n"
"        Restituisce <testo> ruotato di 180 gradi. Funziona solo con caratteri ASCII stampabili.\n"
"        "

